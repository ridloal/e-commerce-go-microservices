# ==== Global Settings ====
COMPOSE_PROJECT_NAME=e_commerce_microservices

# ==== API Gateway ====
API_GATEWAY_PORT=8080
# URL layanan internal (nama service dari docker-compose.yml)
USER_SERVICE_URL=http://user_service:8081
PRODUCT_SERVICE_URL=http://product_service:8082
WAREHOUSE_SERVICE_URL=http://warehouse_service:8083
ORDER_SERVICE_URL=http://order_service:8084

# ==== User Service ====
USER_SERVER_PORT=8081 # Port internal container
USER_DB_HOST=user_db
USER_DB_PORT=5432
USER_DB_USER=postgres
USER_DB_PASSWORD=postgres
USER_DB_NAME=user_db
USER_DB_DSN=postgres://${USER_DB_USER}:${USER_DB_PASSWORD}@${USER_DB_HOST}:${USER_DB_PORT}/${USER_DB_NAME}?sslmode=disable
# JWT Secret (ganti dengan yang lebih aman di produksi)
JWT_SECRET_KEY=test-ecommerce-microservices

# ==== Product Service ====
PRODUCT_SERVER_PORT=8082
PRODUCT_DB_HOST=product_db
PRODUCT_DB_PORT=5432
PRODUCT_DB_USER=postgres
PRODUCT_DB_PASSWORD=postgres
PRODUCT_DB_NAME=product_db
PRODUCT_DB_DSN=postgres://${PRODUCT_DB_USER}:${PRODUCT_DB_PASSWORD}@${PRODUCT_DB_HOST}:${PRODUCT_DB_PORT}/${PRODUCT_DB_NAME}?sslmode=disable
# WAREHOUSE_SERVICE_URL sudah ada di atas

# ==== Warehouse Service ====
WAREHOUSE_SERVER_PORT=8083
WAREHOUSE_DB_HOST=warehouse_db
WAREHOUSE_DB_PORT=5432
WAREHOUSE_DB_USER=postgres
WAREHOUSE_DB_PASSWORD=postgres
WAREHOUSE_DB_NAME=warehouse_db
WAREHOUSE_DB_DSN=postgres://${WAREHOUSE_DB_USER}:${WAREHOUSE_DB_PASSWORD}@${WAREHOUSE_DB_HOST}:${WAREHOUSE_DB_PORT}/${WAREHOUSE_DB_NAME}?sslmode=disable

# ==== Order Service ====
ORDER_SERVER_PORT=8084
ORDER_DB_HOST=order_db
ORDER_DB_PORT=5432
ORDER_DB_USER=postgres
ORDER_DB_PASSWORD=postgres
ORDER_DB_NAME=order_db
ORDER_DB_DSN=postgres://${ORDER_DB_USER}:${ORDER_DB_PASSWORD}@${ORDER_DB_HOST}:${ORDER_DB_PORT}/${ORDER_DB_NAME}?sslmode=disable
PAYMENT_TIMEOUT_MINUTES=2

# ==== Database Ports Mapping (Host:Container) - Opsional untuk akses dari host ====
USER_DB_HOST_PORT=5441
PRODUCT_DB_HOST_PORT=5442
WAREHOUSE_DB_HOST_PORT=5443
ORDER_DB_HOST_PORT=5444